[gd_resource type="VisualShader" load_steps=17 format=3 uid="uid://c3ldoaktoat7s"]

[sub_resource type="VisualShaderNodeInput" id="VisualShaderNodeInput_koqi1"]
expanded_output_ports = [0]
input_name = "normal"

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_688a0"]
parameter_name = "Parallax_Ratio"
default_value_enabled = true
default_value = 30.0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_4ihin"]
default_input_values = [0, 0.0, 1, 1.0, 2, 0.0]
op_type = 0

[sub_resource type="VisualShaderNodeFloatParameter" id="VisualShaderNodeFloatParameter_8dofd"]
parameter_name = "Spread"
default_value_enabled = true
default_value = 0.05

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_fn5b1"]
output_port_for_preview = 0
default_input_values = [1, Vector2(1, 1), 2, Vector2(1, 1)]
function = 1

[sub_resource type="VisualShaderNodeTexture2DParameter" id="VisualShaderNodeTexture2DParameter_bawp5"]
parameter_name = "Texture2DParameter"
texture_type = 1

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_w7cxa"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0
operator = 2

[sub_resource type="VisualShaderNodeColorOp" id="VisualShaderNodeColorOp_156m5"]
operator = 8

[sub_resource type="VisualShaderNodeVectorOp" id="VisualShaderNodeVectorOp_odg3f"]
default_input_values = [0, Vector2(0, 0), 1, Vector2(0, 0)]
op_type = 0

[sub_resource type="VisualShaderNodeVectorCompose" id="VisualShaderNodeVectorCompose_crrbr"]
op_type = 0

[sub_resource type="VisualShaderNodeVec2Parameter" id="VisualShaderNodeVec2Parameter_pimtj"]
parameter_name = "Offset"
default_value_enabled = true

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_8454o"]
output_port_for_preview = 0
source = 5

[sub_resource type="Gradient" id="Gradient_ni3ib"]
offsets = PackedFloat32Array(0, 0.241176, 0.547059, 0.776471, 1)
colors = PackedColorArray(1, 0, 1, 1, 5.77569e-06, 0.715349, 0.89184, 1, 0.888967, 0.751759, 0.226182, 1, 0.258824, 0.792157, 0.364706, 1, 1, 0.368428, 0.948529, 1)

[sub_resource type="GradientTexture1D" id="GradientTexture1D_bokko"]
gradient = SubResource("Gradient_ni3ib")

[sub_resource type="VisualShaderNodeTexture" id="VisualShaderNodeTexture_fj3ke"]
output_port_for_preview = 0
texture = SubResource("GradientTexture1D_bokko")
texture_type = 1

[sub_resource type="VisualShaderNodeUVFunc" id="VisualShaderNodeUVFunc_j6l6j"]
output_port_for_preview = 0

[resource]
code = "shader_type spatial;
render_mode blend_mix, depth_draw_opaque, cull_back, diffuse_lambert, specular_schlick_ggx;

uniform vec2 Offset = vec2(0.000000, 0.000000);
uniform float Parallax_Ratio = 30;
uniform float Spread = 0.05000000074506;
uniform sampler2D tex_frg_6 : source_color;
uniform sampler2D Texture2DParameter : source_color;



void fragment() {
// Vector2Parameter:35
	vec2 n_out35p0 = Offset;


// Input:14
	vec3 n_out14p0 = NORMAL;
	float n_out14p1 = n_out14p0.r;
	float n_out14p2 = n_out14p0.g;


// VectorCompose:34
	vec2 n_out34p0 = vec2(n_out14p1, n_out14p2);


// FloatParameter:16
	float n_out16p0 = Parallax_Ratio;


// VectorOp:30
	vec2 n_out30p0 = n_out34p0 * vec2(n_out16p0);


// VectorOp:33
	vec2 n_out33p0 = n_out35p0 + n_out30p0;


// UVFunc:9
	vec2 n_in9p1 = vec2(1.00000, 1.00000);
	vec2 n_out9p0 = n_out33p0 * n_in9p1 + UV;


// FloatParameter:28
	float n_out28p0 = Spread;


// VectorCompose:27
	float n_in27p1 = 1.00000;
	vec2 n_out27p0 = vec2(n_out28p0, n_in27p1);


// UVFunc:29
	vec2 n_in29p2 = vec2(1.00000, 1.00000);
	vec2 n_out29p0 = (n_out9p0 - n_in29p2) * n_out27p0 + n_in29p2;


// Texture2D:6
	vec4 n_out6p0 = texture(tex_frg_6, n_out29p0);


	vec4 n_out4p0;
// Texture2D:4
	n_out4p0 = texture(Texture2DParameter, UV);


	vec3 n_out31p0;
// ColorOp:31
	{
		float base = vec3(n_out6p0.xyz).x;
		float blend = vec3(n_out4p0.xyz).x;
		if (base < 0.5) {
			n_out31p0.x = (base * (2.0 * blend));
		} else {
			n_out31p0.x = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out6p0.xyz).y;
		float blend = vec3(n_out4p0.xyz).y;
		if (base < 0.5) {
			n_out31p0.y = (base * (2.0 * blend));
		} else {
			n_out31p0.y = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}
	{
		float base = vec3(n_out6p0.xyz).z;
		float blend = vec3(n_out4p0.xyz).z;
		if (base < 0.5) {
			n_out31p0.z = (base * (2.0 * blend));
		} else {
			n_out31p0.z = (1.0 - (1.0 - base) * (1.0 - 2.0 * (blend - 0.5)));
		}
	}


// Output:0
	ALBEDO = n_out31p0;


}
"
nodes/fragment/0/position = Vector2(1940, 80)
nodes/fragment/3/node = SubResource("VisualShaderNodeTexture2DParameter_bawp5")
nodes/fragment/3/position = Vector2(560, 520)
nodes/fragment/4/node = SubResource("VisualShaderNodeTexture_8454o")
nodes/fragment/4/position = Vector2(1000, 620)
nodes/fragment/6/node = SubResource("VisualShaderNodeTexture_fj3ke")
nodes/fragment/6/position = Vector2(940, -140)
nodes/fragment/9/node = SubResource("VisualShaderNodeUVFunc_j6l6j")
nodes/fragment/9/position = Vector2(300, -180)
nodes/fragment/14/node = SubResource("VisualShaderNodeInput_koqi1")
nodes/fragment/14/position = Vector2(-900, -120)
nodes/fragment/16/node = SubResource("VisualShaderNodeFloatParameter_688a0")
nodes/fragment/16/position = Vector2(-680, 180)
nodes/fragment/27/node = SubResource("VisualShaderNodeVectorCompose_4ihin")
nodes/fragment/27/position = Vector2(240, 240)
nodes/fragment/28/node = SubResource("VisualShaderNodeFloatParameter_8dofd")
nodes/fragment/28/position = Vector2(-180, 380)
nodes/fragment/29/node = SubResource("VisualShaderNodeUVFunc_fn5b1")
nodes/fragment/29/position = Vector2(680, -80)
nodes/fragment/30/node = SubResource("VisualShaderNodeVectorOp_w7cxa")
nodes/fragment/30/position = Vector2(-300, -40)
nodes/fragment/31/node = SubResource("VisualShaderNodeColorOp_156m5")
nodes/fragment/31/position = Vector2(1460, 200)
nodes/fragment/33/node = SubResource("VisualShaderNodeVectorOp_odg3f")
nodes/fragment/33/position = Vector2(80, -100)
nodes/fragment/34/node = SubResource("VisualShaderNodeVectorCompose_crrbr")
nodes/fragment/34/position = Vector2(-500, -80)
nodes/fragment/35/node = SubResource("VisualShaderNodeVec2Parameter_pimtj")
nodes/fragment/35/position = Vector2(-200, -320)
nodes/fragment/connections = PackedInt32Array(3, 0, 4, 2, 28, 0, 27, 0, 9, 0, 29, 0, 27, 0, 29, 1, 16, 0, 30, 1, 29, 0, 6, 0, 4, 0, 31, 1, 6, 0, 31, 0, 31, 0, 0, 0, 30, 0, 33, 1, 33, 0, 9, 2, 34, 0, 30, 0, 14, 1, 34, 0, 14, 2, 34, 1, 35, 0, 33, 0)
